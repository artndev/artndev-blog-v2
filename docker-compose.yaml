services:
  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile.server
      args:
        DB_HOST: ${DB_HOST}
        DB_NAME: ${DB_NAME}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_PORT: ${DB_PORT}
        DB_USERNAME: ${DB_USERNAME}
    env_file:
      - .env
    expose:
      - "8080"
    networks:
      - npm_network

  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile.client
      args:
        VITE_API_URL: ${VITE_API_URL}
        VITE_SOURCE_URL: ${VITE_SOURCE_URL}
        VITE_GITHUB_URL: ${VITE_GITHUB_URL}
        VITE_TELEGRAM_URL: ${VITE_TELEGRAM_URL}
        VITE_LICENSE_URL: ${VITE_LICENSE_URL}
        ADMIN_USERNAME: ${ADMIN_USERNAME}
        ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    env_file:
<<<<<<< HEAD
      - .env.local
=======
      - .env
    ports:
      - "80"
    depends_on:
      - server
    networks:
      - npm_network

  npm:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
      - "81:81" # Admin panel
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    restart: unless-stopped
    networks:
      - npm_network

networks:
  npm_network:
    driver: bridge

volumes:
  npm_data:
  npm_letsencrypt:
>>>>>>> dev
